#include "opencv2/opencv.hpp"
#include <opencv2/core/core.hpp>
#include <opencv2/videoio/videoio.hpp>
#include <stdio.h>
#include <iostream>

using namespace cv;

void videoMix(char* background, char* character);

int main(int argc, char* argv[])
{
    //print help information
    help();
    //check for the input parameter correctness
    if(argc != 4) {
        cerr <<"Incorret input list" << endl;
        cerr <<"exiting..." << endl;
        return EXIT_FAILURE;
    }
    //create GUI windows
    namedWindow("Camera 1");

    if(strcmp(argv[1], "-vids") == 0) {
        //input data coming from a video
        processVideo(argv[2], argv[3]);
    }
    else {
        //error in reading input parameters
        cerr <<"Please, check the input parameters." << endl;
        cerr <<"Exiting..." << endl;
        return EXIT_FAILURE;
    }
    //destroy GUI windows
    destroyAllWindows();
    return EXIT_SUCCESS;
}

int videoMix()
{
    VideoCapture camera0(0); // Objject to camera capturing by device zero..
    VideoCapture camera1(1);
    VideoCapture camera2(2);

    // Container to MJPEG codification as .avi video in 15 frames per second and 640 by 480 resolution.
    VideoWriter video("outputVideo.avi", VideoWriter::fourcc('M','J', 'P', 'G'), 15, Size(1920, 480), true);

    // Loop to build video
    while(true) {

        Mat3b background, character, merged_frame, roi; // Container for image.

        camera0 >> frame0; // Put capture bytes inside the image container.
        camera1 >> frame1;
        camera2 >> frame2;

        merged_frame = Mat(Size(1920, 480), CV_8UC3);
        roi = Mat(merged_frame, Rect(0, 0, 640, 480));
		frame0.copyTo(roi);
		roi = Mat(merged_frame, Rect(640, 0, 640, 480));
		frame1.copyTo(roi);
		roi = Mat(merged_frame, Rect(1280, 0, 640, 480));
		frame2.copyTo(roi);

		/*imshow("im0", frame0);
		imshow("im1", frame1);
		imshow("im2", frame2);*/

        imshow("im3", merged_frame); // Show current image of the video.
        video << merged_frame; // Put image inside video container.

        //Finish application by Esc key pressed.
        char ch =  waitKey(25);  // Wait for 25 ms for user to hit any key
		if(ch==27) break;  // If Escape Key was hit just exit the loop

		if(ch=='s' || ch=='S') // Save image if s was keyboard
		{
			imwrite("imgSaved.bmp", frame0);
		}

    }

    return 0;
}
